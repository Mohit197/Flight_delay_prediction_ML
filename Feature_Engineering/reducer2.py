#!/usr/bin/env python

import sys
import os
import time

def map_line(line):
    # Split the input line into fields
    fields = line.strip().split(',')

    # Extract relevant columns
    mon, dom, dow, carrier, org, depart, duration, delay, km, label, carrier_idx, org_idx = fields[:12]

    # Convert relevant columns to float values
    mon, dom, dow, carrier_idx, org_idx, km, depart, duration, delay = (
        float(mon), float(dom), float(dow),
        float(carrier_idx), float(org_idx), float(km),
        float(depart), round(float(duration), 2), int(delay)
    )

    # Assemble the features into a list as float values
    features = [mon, dom, dow, carrier_idx, org_idx, km, depart, duration]

    # Return the assembled features and the delay as a tab-separated string
    return '\t'.join([','.join(map(lambda x: f"{x:.1f}" if x.is_integer() else f"{x:.2f}", features)), str(delay)])

def process_output_file(file_path):
    with open(file_path, 'r') as output_file:
        results = [map_line(line) for line in output_file]

    # Save the processed results to output2.txt
    with open("output2.txt", 'w') as output2_file:
        for result in results:
            output2_file.write(result + '\n')

if __name__ == "__main__":
    # Add a delay to allow time for Mapper 1 to generate output1.txt
    time.sleep(5)  # Adjust the delay time as needed

    # Process the output file generated by Mapper 1
    process_output_file("output1.txt")
